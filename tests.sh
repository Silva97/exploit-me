#!/bin/bash

function run-challenge() {
    make docker-$1 > /dev/null
    make run-$1 | tail -n1 | cut -d':' -f2
}

function run-solution() {
    local expectedOutput="Congratulations! You have finished the challenge! 🥳🎉"
    local script="$1"
    local ip="$2"
    local attempt="${3-1}"

    if [ $attempt -gt 5 ]; then
        echo -e "❌ $script"
        return 0
    fi

    echo -n ". "
    local result=$(timeout 7s $script $ip 2>/dev/null)
    if [ "$result" != "$expectedOutput" ]; then
        let attempt++
        sleep 1s
        run-solution "$script" "$ip" "$attempt"
        return
    fi

    echo -e "✅ $script"
    return 1
}

function test-solutions() {
    local failCount=0
    local successCount=0

    for solutionScript in $(find solutions/ -maxdepth 3 -name "solution.*"); do
        solutionNumber=$(sed -E 's:solutions/exploitme([0-9]+)/.*:\1:' <<< "$solutionScript")

        challengeIp=$(run-challenge "$solutionNumber")

        run-solution "./$solutionScript" "$challengeIp"
        if [ $? -eq 0 ]; then
            let failCount++
        else
            let successCount++
        fi

        docker kill "exploitme$solutionNumber" > /dev/null 2> /dev/null
    done

    echo "----------------------"
    echo "Success: $successCount"
    echo "Fail:    $failCount"
    return $failCount
}

startTime=$(date +%s)

test-solutions
result=$?

endTime=$(date +%s)

echo "Time:    $(date -d @$((endTime - startTime)) -u +%H:%M:%S)"
exit $result
